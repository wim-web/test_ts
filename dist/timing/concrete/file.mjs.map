{"version":3,"sources":["../../../src/timing/concrete/file.ts"],"sourcesContent":["import { TimeConstraint, Timing } from \"../contract\";\nimport fs from 'fs';\nimport * as path from 'path';\n\ntype Locker = {\n    [key: string]: string // 本当はvalueはdateだが、全部parseしてdateにするのは非効率なのでstringで保持する\n}\n\nexport class FileTiming implements Timing {\n    private locker: Locker = {}\n\n    constructor(private readonly filepath: string) {\n        const dir = path.dirname(this.filepath);\n\n        // ディレクトリが存在しない場合は作成\n        if (!fs.existsSync(dir)) {\n            fs.mkdirSync(dir, { recursive: true });\n        }\n\n        // ファイルが存在しない場合は作成\n        if (!fs.existsSync(this.filepath)) {\n            this.flush()\n            return\n        }\n\n        this.read()\n    }\n\n    private read() {\n        this.locker = JSON.parse(fs.readFileSync(this.filepath, 'utf-8'))\n    }\n\n    private flush() {\n        fs.writeFileSync(this.filepath, JSON.stringify(this.locker), 'utf-8')\n    }\n\n    async allow({\n        key,\n        date,\n    }: {\n        key: string,\n        date: Date,\n    }) {\n        if (this.locker[key] === undefined) {\n            return true\n        }\n\n        const nextTime = new Date(this.locker[key])\n\n        return date >= nextTime\n    }\n\n    async complete({\n        key,\n        constraint,\n        date,\n    }: {\n        key: string,\n        constraint: TimeConstraint,\n        date: Date,\n    }) {\n        this.locker[key] = constraint.next(date).toISOString()\n        this.flush()\n    }\n}\n\n"],"mappings":";AACA,OAAO,QAAQ;AACf,YAAY,UAAU;AAMf,IAAM,aAAN,MAAmC;AAAA,EAGtC,YAA6B,UAAkB;AAAlB;AAF7B,SAAQ,SAAiB,CAAC;AAGtB,UAAM,MAAW,aAAQ,KAAK,QAAQ;AAGtC,QAAI,CAAC,GAAG,WAAW,GAAG,GAAG;AACrB,SAAG,UAAU,KAAK,EAAE,WAAW,KAAK,CAAC;AAAA,IACzC;AAGA,QAAI,CAAC,GAAG,WAAW,KAAK,QAAQ,GAAG;AAC/B,WAAK,MAAM;AACX;AAAA,IACJ;AAEA,SAAK,KAAK;AAAA,EACd;AAAA,EAEQ,OAAO;AACX,SAAK,SAAS,KAAK,MAAM,GAAG,aAAa,KAAK,UAAU,OAAO,CAAC;AAAA,EACpE;AAAA,EAEQ,QAAQ;AACZ,OAAG,cAAc,KAAK,UAAU,KAAK,UAAU,KAAK,MAAM,GAAG,OAAO;AAAA,EACxE;AAAA,EAEA,MAAM,MAAM;AAAA,IACR;AAAA,IACA;AAAA,EACJ,GAGG;AACC,QAAI,KAAK,OAAO,GAAG,MAAM,QAAW;AAChC,aAAO;AAAA,IACX;AAEA,UAAM,WAAW,IAAI,KAAK,KAAK,OAAO,GAAG,CAAC;AAE1C,WAAO,QAAQ;AAAA,EACnB;AAAA,EAEA,MAAM,SAAS;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAIG;AACC,SAAK,OAAO,GAAG,IAAI,WAAW,KAAK,IAAI,EAAE,YAAY;AACrD,SAAK,MAAM;AAAA,EACf;AACJ;","names":[]}